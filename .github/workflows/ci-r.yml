name: CI R

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'r/**'
      - '.github/workflows/ci-r.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'r/**'
      - '.github/workflows/ci-r.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        r-version: [4.3, 4.4]

    steps:
    - uses: actions/checkout@v4

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

    - name: Install R dependencies
      run: |
        R -e "install.packages(c('remotes', 'devtools', 'testthat', 'lintr', 'roxygen2'), repos = 'https://cloud.r-project.org')"

    - name: Install package
      run: |
        R -e "devtools::install_deps('r/', dependencies = TRUE)"
        R -e "devtools::install('r/', dependencies = FALSE)"

    - name: Check package
      run: |
        R -e "devtools::check('r/', error_on = 'error', args = '--no-manual')"

    - name: Run tests
      run: |
        R -e "testthat::test_dir('r/tests/testthat/')"

    - name: Lint package
      run: |
        R -e "lintr::lint_package('r/')"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: 4.3

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev

    - name: Install R dependencies
      run: |
        R -e "install.packages(c('remotes', 'devtools', 'roxygen2'), repos = 'https://cloud.r-project.org')"

    - name: Build package
      run: |
        R -e "devtools::build('r/', binary = FALSE)"

    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: ptef-r-package
        path: r/*.tar.gz
