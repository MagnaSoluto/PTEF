[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ptef"
version = "0.1.0"
description = "PTEF - Pronunciation-Time Estimation Framework for Brazilian Portuguese"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    {name = "PTEF Team", email = "ptef@example.com"},
]
keywords = ["pronunciation", "time", "estimation", "portuguese", "speech", "synthesis"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "pandas>=1.3.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "nbstripout>=0.6.0",
    "yamllint>=1.32.0",
    "markdownlint>=0.0.1",
]

[project.scripts]
ptef = "ptef.cli:cli"

[project.urls]
Homepage = "https://github.com/MagnaSoluto/PTEF"
Repository = "https://github.com/MagnaSoluto/PTEF"
Issues = "https://github.com/MagnaSoluto/PTEF/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/ptef"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/notebooks",
    "pyproject.toml",
    "README.md",
    "LICENSE",
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/ptef"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
